name: eks-webapp-deploy
on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true        
      AWS_SECRET_ACCESS_KEY:
        required: true        
      AWS_REGION:
        required: true        
      AWS_ACCOUNT_ID:
        required: true

jobs:
  deploy:
    name: eks apply webapp
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: eks-task

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name $CLUSTER_NAME

      - name: Deploy Kubernetes manifests
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/webapp-deployment
          kubectl get svc webapp-svc -n webapp
          kubectl get pods -n webapp
          kubectl get deployments -n webapp

      - name: Get External IP and curl it
        run: |
          echo "Trying to get service external IP and curl"

          for i in {1..5}; do
            echo "Attempt $i..."

            EXTERNAL_IP=$(kubectl get svc webapp-svc -n webapp -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null)
            if [[ -z "$EXTERNAL_IP" ]]; then
              EXTERNAL_IP=$(kubectl get svc webapp-svc -n webapp -o jsonpath='{.status.loadBalancer.ingress[0].ip}' 2>/dev/null)
            fi

            if [[ -n "$EXTERNAL_IP" ]]; then
              echo "External IP found: $EXTERNAL_IP"
              if curl -sSf http://$EXTERNAL_IP; then
                echo "Service is healthy!"
                exit 0
              else
                echo "Health check failed."
              fi
            else
              echo "External IP not yet assigned."
            fi

            sleep 15
          done

          echo "Service is not healthy or external IP not available after 5 attempts."
          exit 1